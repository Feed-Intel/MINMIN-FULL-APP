name: Deploy Backend to Elastic Beanstalk

on:
  push:
    branches: [main, develop]
    paths:
      - 'MinMinBE/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
      - name: Ensure ECR repository exists
        run: |
          REPO_NAME=$(echo "${{ secrets.ECR_BACKEND }}" | cut -d'/' -f2)
          aws ecr describe-repositories --repository-names "$REPO_NAME" || aws ecr create-repository --repository-name "$REPO_NAME"
      - name: Build and push image
        run: |
          IMAGE_URI=${{ secrets.ECR_BACKEND }}:${GITHUB_SHA}
          docker build -t $IMAGE_URI backend
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
      - name: Determine EB settings
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "EB_ENV=${{ secrets.EB_ENV_MAIN }}" >> $GITHUB_ENV
            echo "EB_APP=${{ secrets.EB_APP_MAIN }}" >> $GITHUB_ENV
            echo "EB_BUCKET=${{ secrets.EB_BUCKET_MAIN }}" >> $GITHUB_ENV
          else
            echo "EB_ENV=${{ secrets.EB_ENV_DEVELOP }}" >> $GITHUB_ENV
            echo "EB_APP=${{ secrets.EB_APP_DEVELOP }}" >> $GITHUB_ENV
            echo "EB_BUCKET=${{ secrets.EB_BUCKET_DEVELOP }}" >> $GITHUB_ENV
          fi
      - name: Render Dockerrun
        run: |
          cat > Dockerrun.aws.json <<EOD
          {
            "AWSEBDockerrunVersion": "1",
            "Image": {
              "Name": "$IMAGE_URI",
              "Update": "true"
            },
            "Ports": [
              {"ContainerPort": 8000}
            ]
          }
          EOD
      - name: Ensure EB S3 bucket exists
        run: |
          aws s3api head-bucket --bucket "$EB_BUCKET" 2>/dev/null || \
            aws s3api create-bucket --bucket "$EB_BUCKET" --region ${{ secrets.AWS_REGION }} --create-bucket-configuration LocationConstraint=${{ secrets.AWS_REGION }}
      - name: Bundle and deploy
        run: |
          aws elasticbeanstalk create-application-version --application-name $EB_APP --version-label $GITHUB_SHA --source-bundle S3Bucket=$EB_BUCKET,S3Key=$GITHUB_SHA.zip
          aws elasticbeanstalk update-environment --environment-name $EB_ENV --version-label $GITHUB_SHA  || echo "Application version already exists"    
      - name: Post-deploy health check
        run: |
          curl -f https://${EB_ENV}.elasticbeanstalk.${{ secrets.AWS_REGION }}.amazonaws.com/healthz
