server {
  listen 80 default_server;
  # Support local and staging domains
  server_name api.local stg.api.feed-intel.com api.feed-intel.com;

  # ACME HTTP-01 challenge (Let's Encrypt)
  location ^~ /.well-known/acme-challenge/ {
    alias /var/www/certbot/.well-known/acme-challenge/;
    default_type text/plain;
    access_log off;
  }

  # Redirect root to API docs to avoid 404s on /
  location = / {
    return 301 /docs;
  }

  # Resolve Docker DNS at request time for stable upstreams
  resolver 127.0.0.11 ipv6=off valid=30s;
  set $api_upstream api:8000;

  # Health check (forward Host and standard proxy headers)
  location = /healthz/ {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_pass http://$api_upstream/healthz/;
  }
  # Support no-trailing-slash too without redirect
  location = /healthz {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_pass http://$api_upstream/healthz/;
  }

  # WebSocket upgrade for /ws/
  location /ws/ {
    proxy_set_header Host $host;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://$api_upstream;
  }

  location /media/ {
    alias /usr/share/nginx/html/media/;
    access_log off;
    expires 7d;
  }

  location /static/ {
    proxy_pass http://$api_upstream;
  }

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://$api_upstream;
  }
}

# HTTPS for API (staging)
server {
  listen 443 ssl http2;
  server_name stg.api.feed-intel.com;

  ssl_certificate     /etc/nginx/tls/live/stg.api.feed-intel.com/fullchain.pem;
  ssl_certificate_key /etc/nginx/tls/live/stg.api.feed-intel.com/privkey.pem;
  ssl_session_cache off;
  ssl_protocols TLSv1.2 TLSv1.3;

  # Resolve Docker DNS at request time for stable upstreams
  resolver 127.0.0.11 ipv6=off valid=30s;
  set $api_upstream api:8000;

  location = / {
    return 301 /docs;
  }

  location = /healthz/ {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_pass http://$api_upstream/healthz/;
  }
  # Support no-trailing-slash too without redirect (TLS)
  location = /healthz {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_pass http://$api_upstream/healthz/;
  }

  location /ws/ {
    proxy_set_header Host $host;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://$api_upstream;
  }

  location /media/ {
    alias /usr/share/nginx/html/media/;
    access_log off;
    expires 7d;

    add_header 'Access-Control-Allow-Origin' 'https://stg.restaurant.feed-intel.com';
    add_header 'Access-Control-Allow-Methods' 'GET';
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
  }

  location /static/ {
    proxy_pass http://$api_upstream;
  }

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://$api_upstream;
  }
}
