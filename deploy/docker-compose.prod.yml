services:
  db:
    image: postgis/postgis:16-3.4-alpine
    environment:
      POSTGRES_DB: minmin
      POSTGRES_USER: minmin
      POSTGRES_PASSWORD: minmin
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U minmin -d minmin']
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [minmin]

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [minmin]

  api:
    image: ${API_IMAGE}
    env_file:
      - /opt/minmin/api.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - media_data:/app/media
    expose:
      - '8000'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/healthz/']
      interval: 30s
      timeout: 5s
      retries: 5
    networks: [minmin]

  customer_expo:
    image: node:20-alpine
    working_dir: /app
    environment:
      NODE_ENV: production
      PORT: '3001'
      CI: 'true'
      EXPO_NO_TELEMETRY: '1'
    volumes:
      - /opt/minmin/customer:/app
      - customer_node_modules:/app/node_modules
    command:
      [
        'sh',
        '-lc',
        'set -e; if ! npm ci --omit=dev; then npm install --omit=dev; fi; npx --yes expo serve --host 0.0.0.0 --port 3001 --non-interactive --no-open',
      ]
    expose:
      - '3001'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3001/']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks: [minmin]

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      api:
        condition: service_healthy
      customer_expo:
        condition: service_healthy
    entrypoint: [
        'sh',
        '-c',
        "
        echo 'Waiting for customer_expo...';
        while ! curl -s http://customer_expo:3001 >/dev/null 2>&1; do
        sleep 2;
        done;
        echo 'customer_expo ready, starting nginx';
        nginx -g 'daemon off;';
        ",
      ]
    volumes:
      - /opt/minmin/restaurant:/usr/share/nginx/html/restaurant:ro
      - /opt/minmin/customer:/usr/share/nginx/html/customer:ro
      - media_data:/usr/share/nginx/html/media:ro
      - /opt/minmin/acme:/var/www/certbot:ro
      - /opt/minmin/tls:/etc/nginx/tls:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - '80:80'
      - '443:443'
    networks: [minmin]

volumes:
  pgdata:
  media_data:
  customer_node_modules:

networks:
  minmin:
