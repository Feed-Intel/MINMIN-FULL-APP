version: '3.8'
services:
  db:
    image: postgis/postgis:16-3.4-alpine
    environment:
      POSTGRES_DB: minmin
      POSTGRES_USER: minmin
      POSTGRES_PASSWORD: minmin
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U minmin -d minmin']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - minmin
  redis:
    image: redis:7-alpine
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - minmin
  api:
    build:
      context: ./MinMinBE
    env_file:
      - ./MinMinBE/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - '8000:8000'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/healthz']
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - minmin
  restaurant-web:
    image: node:23-alpine
    working_dir: /app
    volumes:
      - ./restaurantFE:/app
      - ./packages:/packages
    environment:
      EXPO_PUBLIC_API_URL: http://localhost:8000/api/v1
      EXPO_PUBLIC_BACKEND_URL: http://localhost:8000/api
      EXPO_PUBLIC_IMAGE_PATH: http://localhost:8000
      EXPO_PUBLIC_WS_URL: ws://localhost:8000/ws/restaurant
      EXPO_PUBLIC_API_KEY: Fxnpt4ju.Fxnpt4ju.Z3CaVgYsuBNLCV18kRryYKn4jm6X6b3l
    command: sh -lc "npm install && npm run web -- --port 19007"
    ports:
      - '19007:19007'
    depends_on:
      api:
        condition: service_started
    networks:
      - minmin

  customer-web:
    build:
      context: ./customerFE
      dockerfile: dockerfile
      args:
        EXPO_PUBLIC_API_URL: http://localhost:8000/api/v1
        EXPO_PUBLIC_BACKEND_URL: http://localhost:8000/api
        EXPO_PUBLIC_DOMAIN: localhost:8000
        EXPO_PUBLIC_WS_URL: ws://localhost:8000/ws/user
        EXPO_PUBLIC_BASE_URL: http://localhost:3001
        EXPO_PUBLIC_API_KEY: Fxnpt4ju.Fxnpt4ju.Z3CaVgYsuBNLCV18kRryYKn4jm6X6b3l
    ports:
      - '3001:3001'
    depends_on:
      api:
        condition: service_started
    networks:
      - minmin
volumes:
  pgdata:

networks:
  minmin:
