version: "3.8"

services:
  api:
    build:
      context: ./MinMinBE
    env_file:
      - MinMinBE/.env   # For local/dev; prefer EB env vars for secrets in prod
    environment:
      DJANGO_SETTINGS_MODULE: minminbe.settings
      PORT: ${PORT}  # EB injects this
      DATABASE_URL: postgres://minmin:minmin@db:5432/minmin
      REDIS_URL: redis://redis:6379/0
      ALLOWED_HOSTS: "localhost,127.0.0.1"  # add your EB domain/custom domain
    command: >
      sh -c "
        python manage.py migrate --noinput &&
        gunicorn minminbe.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:${PORT:-8000}
      "
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-8000}/healthz"]
      interval: 30s
      timeout: 5s
      retries: 5
    restart: always

  db:
    image: postgis/postgis:16-3.4-alpine
    environment:
      POSTGRES_DB: minmin
      POSTGRES_USER: minmin
      POSTGRES_PASSWORD: minmin
    volumes:
      - /var/app/postgres:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U minmin -d minmin"]
    restart: always

  redis:
    image: redis:7-alpine
    restart: always

  # Frontends: keep them OUT of EB unless you front them with a reverse proxy.
  # customer-fe:
  #   build:
  #     context: ./MinMinFECustomer
  #     dockerfile: Dockerfile
  #   restart: always
  # restaurant-fe:
  #   build:
  #     context: ./MinMinFERestaurant
  #     dockerfile: Dockerfile
  #   restart: always
